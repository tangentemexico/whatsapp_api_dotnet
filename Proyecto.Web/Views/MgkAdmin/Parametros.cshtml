@{
    ViewData["Title"] = "Parametros";
}

<div id="divParametros">
    <nav class="navbar bg-dark border-bottom border-body" data-bs-theme="dark">
        <div class="container-fluid">
            <div class="d-flex" role="search">
                <button class="btn btn-outline-secondary text-white" v-on:click="BtnListado" type="button">
                    <i class="bi bi-list-task"></i>
                    Listado
                </button>
                <span>&nbsp;</span>
                <button class="btn btn-outline-secondary text-white" v-on:click="BtnEditar(true,-1)" type="button">
                    <i class="bi bi-file-earmark-plus"></i>
                    Nuevo
                </button>
            </div>
        </div>
    </nav>
    <!-- Modal1 Modal-->
    <div class="modal" tabindex="-1" id="Modal1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{{Titulo}} </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <div class="row mb-2">
                           
                            <div class="col-sm-6">
                                <label for="Parametro_id" class="col-sm-6 col-form-label text-right">Parametro</label>
                                <input type="text" class="form-control datepicker" id="Parametro_id" v-bind:readonly="isReadOnly" value="" v-model="FilaModelo.Parametro_id" autocomplete="off">
                            </div>

                          
                            <div class="col-sm-6">
                                <label for="Valor" class="col-sm-6 col-form-label text-right">Valor</label>
                                <input type="text" class="form-control" id="Valor" placeholder="" v-model="FilaModelo.Valor" autocomplete="off">
                            </div>
                        </div>
                       
                        <div class="row mb-2">
                          
                            <div class="col-sm-6">
                                <label for="Tipo" class="col-sm-6 col-form-label text-right">Tipo</label>
                                <input type="text" class="form-control" id="Tipo" placeholder="" v-model="FilaModelo.Tipo" autocomplete="off">
                            </div>
                          
                            <div class="col-sm-6">
                                <label for="Descripcion" class="col-sm-6 col-form-label text-right">Descripción</label>
                                <input type="text" class="form-control" id="Descripcion" placeholder="" v-model="FilaModelo.Descripcion" autocomplete="off">
                            </div>
                        </div>
                       
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-primary col-2" v-on:click="BtnGuardar()"> <i class="fas fa-fw fa-save"></i> Guardar </button>
                    <button type="button" class="btn btn-sm btn-dark col-2" v-on:click="BtnEditar(false,-1)"><i class="fas fa-fw fa-times-circle"></i> Cancelar </button>
                </div>
            </div>
        </div>
    </div>


    <br />

    <table class="table table-bordered table-striped" id="tb_listado">
        <thead>
            <tr>
                <th style="width:110px">-</th>
                <th>Parametro</th>
                <th>Valor</th>
                <th>Tipo</th>
                <th>Descripción</th>
            </tr>
        </thead>
        <tbody v-if="Listado!=null">
            <tr v-for="Fila,Indice in Listado">
                <td>
                    <button type="button" class="btn btn-info btn-sm" v-on:click="BtnEditar(true,Indice)">
                        <i class="bi bi-pencil-square"></i>
                    </button>
                    <button type="button" class="btn btn-danger btn-sm" v-on:click="BtnBorrar(Indice)">
                        <i class="bi bi-trash3"></i>
                    </button>
                </td>
                <td>{{Fila.Parametro_id}}</td>
                <td>
                    <span v-if="Fila.Tipo!='password'">{{Fila.Valor}}</span>
                    <span v-else>#############</span>
                </td>
                <td>{{Fila.Tipo}}</td>
                <td>{{Fila.Descripcion}}</td>
            </tr>
        </tbody>
        <tbody v-else>
            <tr>
                <td colspan="5">No hay información</td>
            </tr>
        </tbody>
    </table>

</div>

<script>
    var dtt = null;
    //$(document).ready(function () {
    //    ParametrosVue.BtnListado();
    //});

    var ParametrosVue = new Vue({
        el: '#divParametros',
        data: {
            Titulo: '@Html.Raw(ViewData["Title"])',
            bEditar: false,
            isReadOnly: true,
            Listado: null,
            FilaModelo: {
                Parametro_id: '',
                Valor: '',
                Tipo: '',
                Descripcion: ''
            }
        },
        mounted() {
            //$("#pagina_activa").html("Parametros");
            document.getElementById("page_controller").innerHTML = "@ViewData["Title"]";
            document.getElementById("page_action").innerHTML = "Opciones del sistema";
            this.BtnListado();
        },
        methods: {
            BtnListado() {
                Swal.fire({
                    title: 'Procesando',
                    text: "Por favor espera",
                    showConfirmButton: false,
                });
                axios.get(url_base + "api/AParametro/Listado").
                    then(response => {

                        if (response.data.Number >= 0) {
                            this.Listado = response.data.OData;
                            console.log(this.Listado);

                            if (dtt != null)
                                $('#tb_listado').DataTable().destroy();

                           setTimeout(() => {
                                dtt = $('#tb_listado').DataTable({
                                    responsive: true,
                                    dom: '<"row"<"col-sm-3"l><"col-sm-2 "B><"col-sm-7 text-end"f >rtip',
                                    "lengthMenu": [[-1, 10, 25, 50], ["Todas", 10, 25, 50]],
                                     buttons: [
            {
                extend: 'copy',
                className: 'btn btn-primary me-2'
            },
            {
                extend: 'excel',
                className: 'btn btn-success'
            }
        ]
                                });
                                Swal.close();
                            }, 0);
                        } else {
                            //ModalMostrar(response.data.Message, true);
                            Swal.close();
                        }
                    }).catch(error => {
                        console.log("### ERROR ::");
                        console.log(error)
                    });
            },
            BtnEditar(bEditar, indice) {
                this.bEditar = bEditar;
                if (bEditar)
                    $("#Modal1").modal("show");
                else
                    $("#Modal1").modal("hide");
                if (indice >= 0) {
                    this.isReadOnly = true;
                    this.FilaModelo = this.Listado[indice];
                }
                else {
                    this.isReadOnly = false;
                    this.FilaModelo = {
                        Parametro_id: '',
                        Valor: '',
                        Tipo: '',
                        Descripcion: ''
                    };
                }
            },
            BtnGuardar() {
                axios.post(url_base + "api/AParametro", this.FilaModelo).
                    then(response => {
                        alert(response.data.Message);
                        if (response.data.Number >= 0) {
                            this.bEditar = false;
                            this.BtnListado();
                            $("#Modal1").modal("hide");
                        }
                    }).catch(error => {
                        console.log("### ERROR ::");
                        console.log(error)
                    });
            },
            BtnBorrar(Indice) {

                                  Swal.fire({
      title: "Desea eliminar el siguiente registro?",
      showDenyButton: true,
      showCancelButton: true,
      confirmButtonText: "Eliminar",
      denyButtonText: `No Eliminar`
    }).then((result) => {
      /* Read more about isConfirmed, isDenied below */
      if (result.isConfirmed) {
           axios.delete(url_base + "api/AParametro/" + this.Listado[Indice].Parametro_id).
                    then(response => {
                           Swal.fire({
        title: "Eliminación Exitosa!",
        icon: "success",
        draggable: true
    }).then(() => {
        setTimeout(() => {
            if (response.data.Number >= 0) {
                this.bEditar = false;
                this.BtnListado();
            }
        }, 1000); // Pausa de 2 segundos
    });
                    }).catch(error => {
                        console.log("### ERROR ::");
                        console.log(error)
                    });

      } else if (result.isDenied) {
        Swal.fire("No se elimino", "", "info");
      }
    });
               
            },
        }
    });
</script>

@section head{
    <link href="~/datatables/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/datatables/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/autoFill.bootstrap5.css" rel="stylesheet">
    <link href="~/datatables/css/buttons.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/colReorder.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/dataTables.dateTime.min.css" rel="stylesheet">
    <link href="~/datatables/css/fixedColumns.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/fixedHeader.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/keyTable.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/responsive.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/scroller.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/select.bootstrap5.min.css" rel="stylesheet">
    <link href="~/datatables/css/stateRestore.bootstrap5.min.css" rel="stylesheet">


                                                        @* <script src="~/datatables/js/bootstrap.bundle.min.js"></script> *@
    <script src="~/datatables/js/jszip.min.js"></script>
    <script src="~/datatables/js/pdfmake.min.js"></script>
    <script src="~/datatables/js/vfs_fonts.js"></script>
    <script src="~/datatables/js/dataTables.min.js"></script>
    <script src="~/datatables/js/dataTables.bootstrap5.min.js"></script>
    <script src="~/datatables/js/dataTables.autoFill.min.js"></script>
    <script src="~/datatables/js/autoFill.bootstrap5.min.js"></script>
    <script src="~/datatables/js/dataTables.buttons.min.js"></script>
    <script src="~/datatables/js/buttons.bootstrap5.min.js"></script>
    <script src="~/datatables/js/buttons.colVis.min.js"></script>
    <script src="~/datatables/js/buttons.html5.min.js"></script>
    <script src="~/datatables/js/buttons.print.min.js"></script>
    <script src="~/datatables/js/dataTables.colReorder.min.js"></script>
    <script src="~/datatables/js/dataTables.dateTime.min.js"></script>
    <script src="~/datatables/js/dataTables.fixedColumns.min.js"></script>
    <script src="~/datatables/js/dataTables.fixedHeader.min.js"></script>
    <script src="~/datatables/js/dataTables.keyTable.min.js"></script>
    <script src="~/datatables/js/dataTables.responsive.min.js"></script>
    <script src="~/datatables/js/responsive.bootstrap5.js"></script>
    <script src="~/datatables/js/dataTables.scroller.min.js"></script>
    <script src="~/datatables/js/dataTables.select.min.js"></script>
    <script src="~/datatables/js/dataTables.stateRestore.min.js"></script>
    <script src="~/datatables/js/stateRestore.bootstrap5.min.js"></script>
}